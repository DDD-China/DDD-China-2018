eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3R h=[{\'9-n\':\'../i/h/2n-2p.t\',\'9-l\':\'1e 18\',\'9-m\':\'全球软件巨匠\',\'9-k\':\'\'+\'<a f="e-d">1e 18</a><b>\'+\'<p>全球软件巨匠，1t 1U 之父</p>\',\'9-o\':\'<a f="e-d">「1X 1Z 21 23」</a><b>\',\'9-j\':\'\'},{\'9-n\':\'../i/h/2d.t\',\'9-l\':\'肖然\',\'9-m\':\'精益方法布道师\',\'9-k\':`<a f="e-d">肖然</a><b>s咨询和设计总监，精益方法布道师<b>国内最早的敏捷精益方法实践者，适应性领导力及领域驱动架构方法首席讲师及教练。作为咨询顾问长期辅导国内外知名企业进行精益企业的建设，近期在多个大型开发团队推广领域驱动设计方法及微服务架构。`,\'9-o\':`<a f="e-d">「为不确定性架构」</a><b>第四次工业革命引爆了一个科技驱动的新时代，软件成为了这个时代的核心竞争力。然而在行业光环下的软件工程人员们日子并不好过，高速乃至颠覆性的发展给我们制造了大量的不确定性，迫使我们去思考新的技术架构方式来适应这个时代。正是在这样的背景下，领域驱动设计的方式再次进入了我们的视野，成为了我们响应不确定性的重要方法。`,\'9-j\':`<g><7>不确定性的悖论</7><7>架构设计的达摩克利斯之剑</7><7>面向不确定性演进</7><7>微服务架构红眼病</7></g>`,},{\'9-n\':\'../i/h/2y.w\',\'9-l\':\'张逸\',\'9-m\':\'编码实践、加固设计、领域驱动实践领先者\',\'9-k\':`<a f="e-d">张逸</a><b>编码实践、加固设计、领域驱动实践领先者<b>致力于编码实践、架构设计、领域驱动、大数据分析，并在金融、制造业、医疗、通信、企业架构、互联网诸多行业有丰富的开发与设计经验。`,\'9-o\':`<a f="e-d">「y r的实践意义」</a><b>y r作为c战略设计的重要入口与概念，可以与微服务设计有机地结合起来。<b>本演讲会深入剖析y r的本质原理，提供切实可行的方法帮助团队成员发现y r，探讨y r的边界，并结合1t 2O、微服务架构、六边形架构模式、用户故事地图，总结出从架构到编码实现的实践意义。`,\'9-j\':`<g><7>y r的本质意义</7><7>如何发现合理的y r y r的边界</7><7>y r之间的通信</7><7>从战略架构到战术实现</7></g>`,},{\'9-n\':\'../i/h/33.w\',\'9-l\':\'潘加宇\',\'9-m\':\'U 首席专家<b>U 创始人\',\'9-k\':\'<a f="e-d">潘加宇</a><b>U创始人，潜心研究需求和设计技能。\'+\'3M年开始对外提供X需求和设计的技术指导和训练服务。到现在为止，已经上门为超过3N家的组\'+\'织提供服务，覆盖了国内各个领域的领袖企业，包括通信、企业管理、电子商务、房地产、网络游戏、\'+\'地理信息、物流、数码设备、医疗设备、工业控制.....等领域。\',\'9-o\':\'<a f = "e-d">「复杂领域模型的建模」</a><b>\'+\'一个反映领域内涵的领域模型是领域驱动设计成功的根本。目前许多有关领域驱动设计的探讨集中于如何实现领域驱动设计，\'+\'所举例子的领域模型中涉及到的类的数量很少，导致有的开发人员虽然掌握了实现领域驱动设计的一些技能，却在面对量多\'+\'而且复杂的领域概念和逻辑时，不知道如何下手来建立恰当的领域模型。本演讲介绍领域建模的一些关键要点，有助于改善这一现象。\',\'9-j\':\'<g>\'+\'<7>建模要素讲解</7>\'+\'<7>一个领域建模过程的案例展示</7>\'+\'</g>\'},{\'9-n\':\'../i/h/3Q.w\',\'9-l\':\'李新\',\'9-m\':\'骨灰级程序员\',\'9-k\':`<a f="e-d">李新</a><b>代码20+年，精通从C++到z，用H实现过互联网大型分布式系统，用J设计过现代通信网络。像计算机一样思考，追求代码架构设计的大道至简。`,\'9-o\':`<a f="e-d">「你的领域架构落地了吗？」</a><b>领域驱动的架构设计要求从业务分析到代码实现都采用统一语言，即最后的实现代码是完整表达出了我们的领域建模的。然而我们发现很多团队在采用c的时候并没有能够做到这一点，让领域模型流于了形式，没有发挥统一语言的核心作用。本次演讲中将为大家介绍一些工具通过可视化的方式来帮助团队甄别领域模型的代码落地，促进领域模型的维护成为团队每个人的责任。`,\'9-j\':`<g><7>领域模型从产生到落地</7><7>经典的模型实现模式</7><7>可视化你的领域模型</7><7>3P：模型守护！</7></g>`,},{\'9-n\':\'../i/h/3O.w\',\'9-l\':\'滕云\',\'9-m\':\'实现领域驱动设计译者\',\'9-k\':`<a f="e-d">腾云</a><b>《实现领域驱动设计》译者<b>s咨询师，6年+一线编码经验，3年+领域驱动设计实践经验，技术专研领域包括c、R生态圈、v、3L以及软件匠艺；译有《实现领域驱动设计》和《人件》等书。`,\'9-o\':`<a f="e-d">「c——没那么难」</a><b>c社区一直不乏思想领袖，但是要将c落地确是另一回事情。本次演讲主要面向希望在项目上实际实施c的听众，包含c中的战略设计和战术设计，也包含c与微服务的关系分析。`,\'9-j\':`<g><7>c限界上下文划分</7><7>c与微服务</7><7>聚合根识别</7><7>实体和值对象</7><7>领域服务</7><7>六边形架构</7></g>`,},{\'9-n\':\'../i/h/3K.w\',\'9-l\':\'寇宇\',\'9-m\':\'微服务架构、系统监控、企业架构规划专家\',\'9-k\':`<a f="e-d">寇宇</a><b>融数数据研发总监，微服务架构、系统监控、企业架构规划专家<b>融数数据研发总监，专注于微服务架构、系统监控、企业架构规划等领域。曾就职与3J、苏宁易购、神州数码等企业。`,\'9-o\':`<a f="e-d">「微服务治理及监控」</a><b>微服务架构理念，如何利用领域驱动设计对传统单体架构或者1k架构的系统进行微服务架构改造，进而构建微服务架构体系；介绍微服务治理方案和微服务架构下的系统监控方法。`,\'9-j\':`<g><7>微服务架构及其特点</7><7>微服务划定和抽象</7><7>微服务架构选型</7><7>微服务治理与监控</7></g>`,},{\'9-n\':\'../i/h/3I.w\',\'9-l\':\'张群辉\',\'9-m\':\'阿里盒马架构总监<b>领域驱动设计国内最早的一批实践者\',\'9-k\':\'<a f="e-d">张群辉</a><b>\'+\'阿里盒马架构总监，领域驱动设计国内最早的一批实践者<b>\'+\'15 + 年技术及管理实战经验，前阿里基础机构事业部工程效率总监，\'+\'长期一线指导大型复杂系统的架构设计，v、微服务架构及领域驱动\'+\'设计国内最早的一批实践者。崇尚实践出真知，一直奋斗在技术一线。\',\'9-o\':\'<a f="e-d">「c@盒马」</a><b>\'+\'盒马作为阿里巴巴新零售的排头兵，第一次真正意义上涉入零售行业，\'+\'创建中国新零售模式下的供应链体系，颠覆传统1p是盒马技术最近几年不停探索的重点。\'+\'互联网 + 传统零售业务复杂，领域模型在这个复杂的体系里变得尤为重要，\'+\'有别于传统互联网电商架构，本演讲将会深入浅出阐述领域驱动开发在盒马模式下如何演化，\'+\'落地，如何在互联网架构下完整实施具有阿里特点的领域驱动设计模式\',\'9-j\':\'<g>\'+\'<7>领域模型：基于对象 T 基于数据库</7>\'+\'<7>领域模型下的依赖注入</7>\'+\'<7>3G的实现方式</7>\'+\'<7>领域模型下的部署架构</7>\'+\'</g>\'},{\'9-n\':\'../i/h/3F.t\',\'9-l\':\'黄晓辉\',\'9-m\':\'点融网站业务系统设计及开发负责人\',\'9-k\':\'<a f="e-d">黄晓辉</a><b>\'+\'现就职于点融，一家上海的互联网金融公司，曾就职于摩根士丹利、微软等公司。目前\'+\'主要负责点融网站业务系统的设计和开发。专注于互联网金融业务架构设计、微服务实践\'+\'、3E规范和技术团队建设。\',\'9-o\':\'<a f = "e-d">「团队技术进阶之路 - 以c为切入点」</a><b>\'+\'问题背景：团队在技术上成长缓慢，需要更快更好的完成各项业务需求；\'+\' 解决方案：以c为理论和实践框架，发挥“鲶鱼效应”，促进团队学习，\'+\'并最终在新的层次上提供综合技术能力； 方案介绍：经历了 引入 - 讨论 \'+\'- 概念验证 - 小范围实践 - 全面推进 - 反思 - 重新设计 等多个阶段，\'+\'在各个阶段让团队自己去发现并总结经验教训，从而在实践中得到成长； \'+\'实施后的效果：团队在编码规范，代码架构，业务建模等方面形成了一套统\'+\'一的方法论，并且进一步引入了3D的实践，在开发质量和效率上都得到了提供。\',\'9-j\':\'<g>\'+\'<7>实施c前所在团队遇到的问题&背景</7>\'+\'<7>具体的实施步骤</7>\'+\'<7>从领域模型的讨论开始</7>\'+\'<7>3C & 遇到的问题</7>\'+\'<7>在团队中扩大实践范围 & 遇到的问题</7>\'+\'<7>反思</7>\'+\'<7>重新设计</7>\'+\'<7>总结</7>\'+\'</g>\'},{\'9-n\':\'../i/h/3B.t\',\'9-l\':\'周雪峰\',\'9-m\':\'衡睿教育1I，微软最有价值专家（1H）\',\'9-k\':\'<a f="e-d">周雪峰</a><b>\'+\'衡睿教育1I，微软最有价值专家（1H）<b>\'+\'瑞通（北京）高级技术培训中心高级讲师，微软最有影响力开发者，微软3y 3x，\'+\'具有多年基于.3w平台的互联网项目的架构经验及团队管理经验,十多年来一直从事\'+\'Q企业的管理，咨询和培训工作；具有丰富的Q企业管理经验，咨询和教学经验。\',\'9-o\':\'<a f = "e-d">「领域驱动设计与B项目管理」</a><b>\'+\'问题背景：领域驱动设计架构和B敏捷项目管理方法论相结合，改进组织治理。\'+\' 解决方案选型：三个医疗行业项目（江西省医院信息化管理系统，江西省新农合信\'+\'息管理系统，江西省临床试验信息管理系统），技术架构为微软的c框架（3v\'+\'3u），项目管理方法论为：B 方案介绍：使用B敏捷项目管理方法论，\'+\'管理基于c的项目，结合B的c框架各自的优势，提升开发效率，实现软件工\'+\'厂化的组织改进。 实施后效果：提高开发效率，改进软件开发流程与绩效考核，实\'+\'现了组织的技术资产原始积累，与组件化开发。\',\'9-j\':\'<g>\'+\'<7>B和c的完美结合</7>\'+\'<7>三方（产品经理，项目经理和程序员）领域模型设计会</7>\'+\'<7>启动B流程（计划会议，进行B，演示）</7>\'+\'<7>用c实现的软件工厂</7>\'+\'<7>c案例分享：江西省新农合信息管理系统</7>\'+\'</g>\'},{\'9-n\':\'../i/h/3s.t\',\'9-l\':\'张建锋\',\'9-m\':\'资深c实践者\',\'9-k\':\'<a f="e-d">张建锋</a><b>\'+\'千岛源/共同创始人<b>\'+\'原红帽公司 3r 应用服务器核心开发组成员。毕业于北京邮电大学和\'+\'清华大学，曾供职于金山软件，3q 科技公司和红帽软件。 对于 16 \'+\'的各项规范比较熟悉；开源技术爱好者，喜欢接触各类开源项目，学习优秀\'+\'之处并加以借鉴，认为阅读好的源码就和阅读一本好书一样让人感到愉悦；\'+\'在分布式计算，企业应用设计，移动行业应用，3p 等技术领域有丰富的\'+\'实战经验和自己的见解；愿意思考软件背后蕴涵的管理思想，认为软件技术\'+\'是一种高效管理的实现方式，有志于将管理学和软件开发进行结合。\',\'9-o\':\'<a f = "e-d">「微服务架构下E在领域驱动设计中的精妙应用」</a><b>\'+\'E规范是16中揭示软件对象设计的部分，最早来源于1F的1E框架。在c设计中，\'+\'可以运用大量的E规范定义技术来灵活的对应用软件设计构造。和R框架相比，E可塑造\'+\'性更强，企业可以自行开发定义出一套符合自身业务特点的业务框架，做到软件复用和易维护。\'+\'通过配合使用3o，消息，3n，流式数据，事务处理等技术，E可以实现一套高效稳定的c \'+\'H开发框架。更重要的是，它是可扩展可伸缩的，既能部署成经典的3m包应用；又可以结合\'+\'3l，开发微服务体系的应用。\',\'9-j\':\'\'+\'<g>\'+\'<7>c用H语言的实现设计思路</7>\'+\'<7>应用E规范定义对象 </7>\'+\'<7>c开发框架的实现介绍</7>\'+\'<7>如何实现灵活部署</7>\'+\'</g>\'},{\'9-n\':\'../i/h/3k.D\',\'9-l\':\'亢江妹\',\'9-m\':\'s首席业务分析师，中国区业务分析实践负责人\',\'9-k\':\'<a f="e-d">亢江妹</a><b>\'+\'s首席业务分析师，中国区业务分析实践负责人<b>\'+\'在敏捷/精益产品需求分析、大企业需求管理、行业研究等方面，有丰富的实战和教练经验；\'+\'她也是业务分析师(3j)、产品经理的活跃参与者，是3i(3h O 3g)社区、\'+\'s中国行业研究社区的发起人，也是s商业洞见的主编。\',\'9-o\':\'<a f = "e-d">「c落地：A和架构师的完美结对」</a><b>\'+\'如果领域驱动设计，仅限于技术架构讨论的范畴，显然无法让c的真正价值落地，即如何\'+\'“让业务领域驱动架构设计”。本话题中，将结合项目实例与你分享A和架构师如何完美结对，\'+\'来梳理业务需求、进行产品规划，识别和划分业务领域、子领域、领域边界，建立概念关系模型\'+\'，梳理和定义业务服务需求，在“业务侧”和“技术侧”建立统一共同的语言，真正让c落地，\'+\'并提供A和架构师结对实践的实用技巧。\',\'9-j\':\'<g>\'+\'<7>4种常用的业务梳理模式，快速建立业务背景上下文</7>\'+\'<7>业务领域、划分子领域的划分模式及案例 </7>\'+\'<7>如何建立业务概念关系模型</7>\'+\'<7>梳理定义服务需求</7>\'+\'<7>业务概念模型与信息架构、技术架构如何相互映射？</7>\'+\'<7>A和架构师完美结对的1D</7>\'+\'</g>\'},{\'9-n\':\'../i/h/3f.D\',\'9-l\':\'周宇刚\',\'9-m\':\'s高级咨询师，c实践家\',\'9-k\':\'<a f="e-d">周宇刚</a><b>\'+\'s高级咨询师，c实践家<b>\'+\'10年企业级应用开发经验，主要负责软件交付和持续交付咨询。从3e年开始关注领域驱动设计，\'+\'是3d 3c c标签 3b 3a 39 38 之一，曾在多个行业领域中实战过c。\',\'9-o\':\'<a f = "e-d">「c落地：A和架构师的完美结对」</a><b>\'+\'如果领域驱动设计，仅限于技术架构讨论的范畴，显然无法让c的真正价值落地，即如何“让业务\'+\'领域驱动架构设计”。本话题中，将结合项目实例与你分享A和架构师如何完美结对，来梳理业务需求、\'+\'进行产品规划，识别和划分业务领域、子领域、领域边界，建立概念关系模型，梳理和定义业务服务需求，\'+\'在“业务侧”和“技术侧”建立统一共同的语言，真正让c落地，并提供A和架构师结对实践的实用技巧。\'+\'E规范是16中揭示软件对象设计的部分，最早来源于1F的1E框架。在c设计中，\',\'9-j\':\'<g>\'+\'<7>4种常用的业务梳理模式，快速建立业务背景上下文</7>\'+\'<7>业务领域、划分子领域的划分模式及案例 </7>\'+\'<7>如何建立业务概念关系模型</7>\'+\'<7>梳理定义服务需求</7>\'+\'<7>业务概念模型与信息架构、技术架构如何相互映射？</7>\'+\'<7>A和架构师完美结对的1D</7>\'+\'</g>\'},{\'9-n\':\'../i/h/30.t\',\'9-l\':\'张晓龙\',\'9-m\':\'中兴通讯虚拟化架构师\',\'9-k\':\'<a f="e-d">张晓龙</a><b>\'+\'中兴通讯虚拟化架构师<b>\'+\'1C年毕业于哈尔滨工程大学计算机应用专业，爱好编程，业余时间喜欢写一些技术类文章。\'+\'1C年就职于2Y，参与过大型通信软件的开发，擅长2X和重构等2W实践。近年来参与虚拟化\'+\'产品的研发，同时负责提升全员的c能力，从c导入到c训练营，不断的给学员传递c的\'+\'思想和实践技能，目前c已在多个团队有效落地，并得到大家的一致认可。除过程序员，个人\'+\'在组织中还有一些其它标签，比如架构师、咨询师和技术教练等。个人的简书地址：\'+\'1w://1v.1u.11/u/2U。熟练掌握C++/z/1A/H等编程语言，\'+\'这一年主要使用的编程语言是z，同时z也成了c落地的主要语言。这一年在简书上也写\'+\'了多篇与c相关的技术文章，比如《软件设计的演变过程》，《z事务模型》，\'+\'《c分层架构的三种模式》，《2T G 1y V z》，\'+\'《2S V 1A 2Q x O M》。\',\'9-o\':\'<a f = "e-d">「c分层架构的三种模式」</a><b>\'+\'问题背景：在这个快速应对需求变化的时代，代码容易被实现成意大利面条式，同时重复代码多，又好像有一些不同，\'+\'很多程序员都掉进了这个让人痛苦不堪的焦油坑，无法自拔。软件设计就是在长期以来让软件容易应对变化，\'+\'提高可修改性和可维护性，从而降低软件开发成本。方案介绍：通过分层设计，分离关注点，凸显领域模型，\'+\'降低层与层之间的依赖，同时有利于各层逻辑的复用或替换。《领域驱动设计－软件核心复杂性应对之道》这本书中，\'+\'提出了传统的四层架构，层与层之间遵循松散分层架构，即上层可以调用任意下层。我们在实践中，\'+\'将基础设施层分为横向的和纵向的，横向的1z提供给领域层调用，纵向的1z提供给应用层和用户界面层调用，\'+\'其中领域层、应用层和用户界面层遵循严格分层架构，即上层仅能调用相邻的下层，这就是“L”型分层架构。\'+\'将1s应用在分层架构中，将出现五层架构模式，相对于传统的四层架构模式，基础设施层、应用层和用户界面层保持不变，\'+\'将领域层分离成新领域层（1y/2M）和环境层（r）。在一些复杂的领域，一次事务涉及很多次消息的交互，\'+\'这时r层就非常复杂，很有必要把r层分离成新r层（I和1x）和事务层\'+\'（2L Z)。新r层基本单位是一次同步消息或异步消息的交互（记作I），\'+\'新r层的1x是I或一组紧密相关的I（记作2I）是否执行的开关，\'+\'而事务层可以看做是大r层。在实践中，我们抽取出z事务模型，基本版参见简书的文章《z事务模型》，\'+\'地址1w://1v.1u.11/p/2C，一直在演进，目前已被多个团队使用。\'+\'c六层架构模式可以看做是c五层架构模式在特定领域的一种变体。通过依赖导致原则，改善分层架构，即六边形架构。\'+\'六边形架构在产品级有一些应用，比如平台聚合内部的各种能力，对外统一提供为2B接口。\'+\'六边形架构也可以用于不同层组件的协作开发，即在明确组件功能后就可以专注开发，待到联调阶段，\'+\'该组件的多个用户分别通过端口适配器方式再与该组件进行集成。实施后效果说明：事务层代码和流程图一一对应，\'+\'领域层代码通过小类大对象设计，代码层次清晰，有效的控制了软件的实现复杂度，并且得到了团队所有成员的普遍认可。\',\'9-j\':\'<g>\'+\'<7>c回顾</7>\'+\'<7>分层架构简介 </7>\'+\'<7>传统的四层架构模式</7>\'+\'<7>引入1s后的五层架构模式，特定领域的六层架构模式</7>\'+\'<7>六边形架构</7>\'+\'<7>收益</7>\'+\'</g>\'},{\'9-n\':\'../i/h/1J.w\',\'9-l\':\'张晔\',\'9-m\':\'中兴通讯公司级研发教练，架构技术狂热爱好者。\',\'9-k\':\'<a f="e-d">张晔</a><b>\'+\'中兴通讯公司级研发教练，架构技术狂热爱好者。<b>\'+\'擅长C++，1r，1q等编程语言，具备丰富的领域建模、代码质量提升、自动化测试、v等实战经验。\'+\'对深圳软件技术社区发展推广亦有贡献，组织多次社区活动（2x、2w、编码道场等）。目前对形式化方法2v+\'+\'和微服务架构具有浓厚兴趣。<b>\'+\'工作之余喜欢读书、音乐、羽毛球、旅游以及研究新事物。\',\'9-o\':\'<a f = "e-d">「c驱动测试体系建设」</a><b>\'+\'本次演讲将全方位介绍c方法在中兴通讯测试体系设计和落地过程中所启到的关键性作用。\'+\'内容既涵盖从传统自动化测试到基于领域驱动测试的思想转变，也包含随着c实践的不断深入对自动化测试框架逐步演进，\'+\'再到运用c战略设计对云测试平台的微服务划分。不但包含c战略设计，也包括c的战术设计；不但包含c在单体架\'+\'构的应用，还包括c在微服务架构的应用；不但包含c在测试执行框架的实践，还包括c在云测试平台的实践；不但包\'+\'含c的1r语言的实现，还包括1q语言的实现。<b>\'+\'整个测试体系目前在中兴通讯v中发挥着重要作用，本次演讲还会对测试体系建设的不同阶段所面临的不同问题和相\'+\'应解决方案进行描述，相信能满足不同类型的听众。\',\'9-j\':\'<g>\'+\'<7>中兴通讯v实践简介</7>\'+\'<7>传统的自动化测试介绍</7>\'+\'<7>基于领域驱动的自动化测试</7>\'+\'<7>基于云的测试平台建设</7>\'+\'<7>c实践心得总结</7>\'+\'</g>\'},{\'9-n\':\'../i/h/2s.w\',\'9-l\':\'黄亮\',\'9-m\':\'s资深咨询师，c实践布道者\',\'9-k\':\'<a f="e-d">黄亮</a><b>s资深咨询师，c实践布道者，十三年应用开发与架构经验，热爱技术，喜欢2r。专注于软件架构与持续交付领域，为不同领域的客户提供专业的技术改进与咨询服务，尤其擅长于2q技术栈与微服务架构。\',\'9-o\':\'<a f = "e-d">「从x到c」</a><b>\'+\'有人说c是x的一个正确的作法，当我们实践c的过程中，很多x问题依然会遇到，在本主题中，我们将带您探索x本质，分析并解决c实践遇到的各种x问题。\',\'9-j\':\'<g>\'+\'<7>x本质</7>\'+\'<7>从x到c</7>\'+\'<7>实践c中遇到的一些x问题</7>\'+\'</g>\'},{\'9-n\':\'../i/h/2o.D\',\'9-l\':\'胡戎\',\'9-m\':\'中国电子第六研究所前端负责人，1o讲师，1n.1m维护者\',\'9-k\':\'<a f="e-d">胡戎</a><b>中国电子第六研究所前端负责人，1o讲师，1n.1m维护者，负责多个大型航天项目\',\'9-o\':\'<a f = "e-d">「领域驱动的F复合范式在复杂前端应用的实践」</a><b>\'+\'多数据源复杂应用中如何管理数据流，结合K和F的的复合范式构建大型的复杂应用程序。2k 1b 2j采用1b基于K管理2h\'+\'以及G 2g，根据F的编程思想通过2f设计并管理单向数据流。\',\'9-j\':\'<g>\'+\'<7>介绍K和F</7>\'+\'<7>介绍K和F在大型前端应用的技术选型</7>\'+\'<7>举例介绍2c管理数据流常见的业务场景</7>\'+\'</g>\'},{\'9-n\':\'../i/h/2b.t\',\'9-l\':\'王洋\',\'9-m\':\'猫眼娱乐/商品电商技术负责人<b>美团点评《领域驱动设计》课程主讲人\',\'9-k\':\'<a f="e-d">王洋</a><b>猫眼娱乐商品电商技术负责人，同时也是美团点评《领域驱动设计》课程的主讲；\'+\'加入猫眼娱乐（原美团电影事业部）之前，曾就职于支付宝、创新工场，参与支付宝钱包、花呗、网商银行等产品的研发；\'+\'硕士毕业于西安交通大学，专注于新型编程模型的研究\',\'9-o\':\'<a f = "e-d">「领域驱动与1j电商的养成记」</a><b>\'+\'问题背景：随着互联网技术不断深入到电影行业的各个环节，猫眼需要搭建一套围绕影院的1j电商体系，引导用户在线上购买影院的各种服务，线下去消费服务<b><b>\'+\'解决方案选型：顶层架构使用领域驱动的思想建模，包括限界上下文、聚合根等技术，局部根据场景需要，也会使用一些常用的设计模式<b><b>\'+\'方案介绍：战略层面包括供应链、交易、消费、资金等限界上下文，框架层面使用父子工程构建了可水平扩展的分层框架，战术层面则使用聚合根、实体、值对象、29等手段分解代码的复杂性，同时根据业务特点抽象出商品渠道、订单引擎、资金流等模型<b><b>\'+\'实施后效果说明：目前整套电商体系的扩展性较好，以较低的成本陆续支持了卖品、衍生品、电影票、演出等多类型的交易场景，也支持验券、物流、投币等消费场景；同时在28过亿的情况下保持了较高的性能和稳定性<b>\',\'9-j\':\'<g>\'+\'<7>领域术语的管理和维护</7>\'+\'<7>分层框架的设计和实践</7>\'+\'<7>限界上下文的提取和维护</7>\'+\'<7>系统之间的组织方式</7>\'+\'<7>业务演进带来的矛盾点</7>\'+\'<7>潜在模型的抽象和分析</7>\'+\'<7>遇到的困难和总结</7>\'+\'</g>\'},{\'9-n\':\'../i/h/27.t\',\'9-l\':\'刘学斌\',\'9-m\':\'畅捷通信息技术有限公司云产品研发部专家、架构师\',\'9-k\':\'<a f="e-d">刘学斌</a><b>畅捷通信息技术有限公司专家、架构师，近20年软件开发经验，擅长领域驱动设计建模、\'+\'微服务架构设计、应用安全开发、持续集成、v、业务分析建模、开发流程设计等领域。有大型企业组织（26+人团队）实施持续集成、\'+\'应用安全开发、v、架构设计实践经验。目前任职用友畅捷通云产品研发部，专职企业云产品微服务架构设计、企业云产品建模\'+\'（领域建模、物理建模、流程建模），坚信并实践建模解决复杂业务问题之道。\',\'9-o\':\'<a f = "e-d">「c在微服务架构企业云产品中的实践」</a><b>\'+\'公司早在8年前开发了一套面向小型企业供应链管理软件包产品，目前每年销量近25套，在国内同类市场中有相当高的市场占有率。近几年来，\'+\'互联网技术的发展和普及，以及公有云方式的社会化商业基础设施的完善，市场也逐步开始接受企业应用公有云服务。作为老牌的企业应用产品\'+\'开发商，面对互联网浪潮的机遇和挑战，公司决定采用最新的互联网技术和方法开发一套面向小型企业用户的云应用产品。小型企业的特点是数\'+\'量多、个体差异大、单个企业业务交易量相对不高，为了能快速应对变化（业务变化、市场变化等），我们采用微服务架构进行架构设计、引入\'+\'v作为基础支撑、采用c进行分析以及架构设计（c战略设计）、用统一过程（24）及X 2.0进行建模（业务建模、系统建模、领域\'+\'建模、物理建模），整体提高软件内在质量。目前产品已经基本定型，预计年底全国上市，整个产品研发从流程、方法、微服务架构、平台等方\'+\'面一次完整的成功实践，我们对此充满信心。\',\'9-j\':\'<g>\'+\'<7>前言</7>\'+\'<7>背景</7>\'+\'<7>问题分析</7>\'+\'<7>设计目标和思路</7>\'+\'<7>研发实践</7>\'+\'<7>组织架构</7>\'+\'<7>开发规范</7>\'+\'<7>开发流程</7>\'+\'<7>分析设计方法</7>\'+\'<7>架构方案</7>\'+\'<7>租户模式</7>\'+\'<7>应用架构</7>\'+\'<7>总体技术架构</7>\'+\'<7>模块技术架构</7>\'+\'<7>一致性方案</7>\'+\'<7>总结</7>\'+\'</g>\'},{\'9-n\':\'../i/h/22.t\',\'9-l\':\'丁辉\',\'9-m\':\'中兴通讯公司级敏捷教练和代码大全、代码设计训练营教练\',\'9-k\':\'<a f="e-d">丁辉</a><b>中兴通讯公司级敏捷教练和代码大全、代码设计训练营教练，13年软件开发经验，8年项目\'+\'管理和流程改进经验，指导并参多个团队由传统研发模式向敏捷研发模式转型（其中超过1Y人的大型团队成功项目级敏捷转型5个）。 在敏\'+\'捷导入、指导团队转型、1W、核心技术实践、自组织团队建设等方面具有丰富的实战经验； 对如何提升员工代码设计能力和提升代码内在质量\'+\'、遗留代码重构、c/Z架构设计等方面也有较多理解和解决思路； 精益创业教练，曾指导多个创业团队产品设计、团队运作、技术架构。\',\'9-o\':\'<a f = "e-d">「康威定律中的c-c架构与团队组织调整」</a><b>\'+\'c实现了业务逻辑、系统逻辑、部署逻辑的分层和解耦，但是如果组织架构没有跟随这种结构，往往导致领域划分和人员的组织形式不匹配，\'+\'导致领域和人员的一种映射，而来带来额外的沟通成本和组织壁垒，这种情况久而久之又反过来对领域的合理划分造成逐步的侵蚀，渐渐的领域\'+\'对象又开始耦合起来，原理清晰的分层又开始腐化了。在我们最初实践c的时候，有些团队规模庞大，采用c之后，团队职责还是按组件方式\'+\'划分，就出现过这种对c架构腐化的情况，人员拆分始终面临难题：人员纵拆又要兼顾解决公共层维护问题。我知道的团队，先后经历过绝对纵\'+\'拆、基于功能的复用的纵拆辅助少量的横拆，最后随着c的深入，把领域层进行基于语义的拆分，人员也基于领域的纵拆+基于领域本身分层的\'+\'语义复用的横拆，目前看比较顺畅的解决了c架构和组织治理的问题。\',\'9-j\':\'<g>\'+\'<7>c对领域的划分</7>\'+\'<7>开发团队人员纵拆带来的好处和挑战</7>\'+\'<7>领域层基于语义的再次分层</7>\'+\'<7>开发团队人员按领域纵拆+按领域层基础语义层横拆结合</7>\'+\'<7>现场交流</7>\'+\'</g>\'},{\'9-n\':\'../i/h/1V.D\',\'9-l\':\'付银海\',\'9-m\':\'泰然城S\',\'9-k\':\'<a f="e-d">付银海</a><b>17年软件研发从业经历，现任泰然城S，曾在美国工作多年，历任元宝铺S负责技术团\'+\'队管理，主持公司技术研发、体系和品质管控等工作；全球最大的企业级软件公司1T（甲骨文）上海研发中心首席工程师；1h 1S中国\'+\'研发中心研发总监；阿里巴巴1R平台技术部架构师；1Q.11研发中心技术经理。\',\'9-o\':\'<a f = "e-d">「领域驱动设计－创业公司治理」</a><b>\'+\'真实的实践案例<b>\'+\'创业公司的坑<b>\'+\'如何引入领域设计支付结算方式<b>\',\'9-j\':\'<g>\'+\'<7>团队基因：<b>\'+\'<q><7>技术驱动P业务驱动</7><7>理想P现实</7></q></7>\'+\'<7>成长现实：<b>\'+\'<q><7>小－》大</7><7>简单－》复杂</7><7>牛人－》团队</7><7>技术追赶业务</7></q></7>\'+\'<7>面临问题：<b>\'+\'<q><7>业务无法堆叠</7><7>系统边界混乱</7><7>信息传递失真</7><7>团队边界模糊</7><7>跨组协作困难</7></q></7>\'+\'<7>解决方案：<b>\'+\'<q><7>继续野蛮生长</7><7>请到大牛S</7><7>渐进优化改良</7><7>极端推倒重来</7></q></7>\'+\'<7>问题本质：<b>\'+\'<q><7>没有领域</7><7>领域脆弱－抽象不够</7><7>实施困难－抽象过度</7><7>没有取舍－断舍离－杀伐决断</7></q></7>\'+\'<7>实践分享：<b>示例：1d+1c+R+1a的领域驱动架构\'+\'<q>\'+\'<7>1N～W  1h 1L：（1K）架构图＋岗位设定－－－－－－－－－－－－－－－过度抽象</7>\'+\'<7>3H～1g 元宝铺：（3A）专家设计领域＋3z落地实现＋技术团队宣讲－－－－－－技术等待</7>\'+\'<7>1g～1f 旺资金融：（35）旺资设计图－－－－－－－－－－－－－－－－－－－－精简实现</7>\'+\'<7>1f～未来10年 领域划分－团队划分－成本压力－工期压力－跨部门沟通－服务化治理－－改良＋推倒</7>\'+\'</q></7>\'+\'<7>经验总结：<b>\'+\'<q><7>升纬思考P降纬执行</7><7>的度如何把握</7><7>技能要求</7><7>边界划定P担当冲锋</7><7>技术人员能力成长：执行力，推动力，领导力，哲学力</7></q></7>\'+\'</g>\'},{\'9-n\':\'../i/h/2Z.t\',\'9-l\':\'范钢\',\'9-m\':\'航天信息股份有限公司首席架构师<b>《大话重构》作者，软件架构及重构客座讲师\',\'9-k\':\'<a f="e-d">范钢</a><b>航天信息首席架构师，《大话重构》作者，哈工大软件工程硕士，软件架构及重构的客座讲师。\'+\'大型遗留系统改造专业户，多次参与大型遗留系统改造、软件系统重构等重大项目。长期关注大型业务系统品质保证、防止腐化以及技术改造等问\'+\'题，在实践互联网转型及大数据转型方面有丰富的经验。\',\'9-o\':\'<a f = "e-d">「领域驱动：看我如何拥抱需求变更」</a><b>\'+\'客户对软件的需求总是在变，但软件企业在实现变更的过程中常常带来软件的腐化。许多系统在经过多年的维护、无数次的需求变更后，\'+\'软件设计慢慢开始迷失方向。解决需求变更与软件腐化最有效的方案无疑是领域驱动设计。本演讲通过真实的案例，一个电商网站支付功\'+\'能的变更过程，演示软件腐化的过程，分析软件腐化的根源，采用领域驱动设计是怎样应对需求变更的、怎样避免软件腐化的，进而探讨\'+\'怎样的软件架构可以支持领域驱动设计，以及支持架构的演进，去面对互联网的高并发访问，大数据的架构转型。\',\'9-j\':\'<g>\'+\'<7>软件开发的痛点：<b>\'+\'<q><7>需求不断在变更</7><7>需求变更引发软件退化</7><7>需求变更 + 软件退化 = 软件设计迷失方向</7></q></7>\'+\'<7>问题的分析：<b>\'+\'<q><7>软件是对真实世界的模拟，但真实世界十分复杂</7><7>人在认识真实世界的时候总是有一个从简单到复杂的过程</7><7>因此软件需求变更成为一种必然，并且总是由简单向复杂转变</7><7>但在软件由简单向复杂转变过程中，设计容易迷失方向</7></q></7>\'+\'<7>解决方案：<b>\'+\'<q><7>将软件设计与真实世界对应起来，建立领域模型</7><7>用领域模型指导软件开发</7><7>每次变更的时候，重新回到领域模型进行变更</7><7>用领域模型变更指导软件变更</7></q></7>\'+\'<7>案例：电商网站支付功能的变更过程\'+\'<q><7>第一个版本的简单支付功能</7><7>商品折扣的变更及其设计</7><7>支付方式的变更及其设计</7><7>秒杀、预订、闪购、众筹等功能的变更（涉及缓存、异步化、分布式等架构调整）</7><7>软件设计开始迷失方向</7></q></7>\'+\'<7>采用领域驱动的设计变更过程：\'+\'<q><7>第一个版本的简单支付功能（建立领域模型）</7><7>商品折扣的变更及其设计（先在领域模型基础上变更）</7><7>支付方式的变更及其设计（领域驱动支持设计的变更）</7><7>秒杀、预订、闪购、众筹等功能的变更（如何应对演化式架构调整）</7></q></7>\'+\'<7>软件架构如何支持领域驱动设计：<b>示例：1d+1c+R+1a的领域驱动架构\'+\'<q><7>如何支持增删改业务</7><7>如何支持查询业务</7><7>如何支持架构的演进（单机→集群→读写分离→大数据）</7></q></7>\'+\'</g>\'},{\'9-n\':\'../i/h/2G.D\',\'9-l\':\'林炜翔\',\'9-m\':\'传统投行业老码农，M应用实践者，技术业务两手抓\',\'9-k\':\'<a f="e-d">林炜翔</a><b>传统投行业老码农，M应用实践者，技术业务两手抓\',\'9-o\':\'<a f = "e-d">「c 2F 2E 2D 2A」</a><b>\'+\'19 2u 2t>无副作用流程规划>19 分流数据>微服务扩展，业务，测试，数据等合理分离\',\'9-j\':\'使用M编程风格拆分业务流程的作用域，以便于微服务扩展，业务，测试，数据等合理分离\'},{\'9-n\':\'../i/h/2m.t\',\'9-l\':\'金新明\',\'9-m\':\'汇丰集团首席风控架构师\',\'9-k\':\'<a f="e-d">金新明</a><b>现任职汇丰集团首席风控架构师，有20多年的国际性跨行\'+\'业大型系统开发和设计经验，是软件建模集成和架构设计方面的专家。他曾引入基于模型的架构开发并且实现金\'+\'融行业第一个从前端到后台的基于模型代码生成系统。<b>\'+\'金新明博士参与了多个2l强企业的超大型复杂系统设计和企业架构设计，曾任职于多家国际大型银行，对各个\'+\'层面的架构设计都有深入的了解和实际经验。他有智能控制（华南理工大学）和先进软件工程（曼彻斯特大学）博士学位。\',\'9-o\':\'<a f = "e-d">「基于模型的架构设计」</a><b>\'+\'c是基于模型的架构设计的一种方法，将其放在这个大背景下讨论它的演变过程并结合自己十多年来在基于模型的软件\'+\'开发方面的经验。在当前微服务和云计算的技术趋势下，如何认识领域驱动设计的必要性和发展方向。\',\'9-j\':\'<g>\'+\'<7>领域驱动设计 2i. 基于模型的架构设计</7>\'+\'<7>c 和基于模型的软件开发</7>\'+\'<7>c和v, 2e</7>\'+\'</g>\'},{\'9-n\':\'../i/h/2a.t\',\'9-l\':\'王立\',\'9-m\':\'厦门云雾科技有限公司创始人/总经理\',\'9-k\':\'<a f="e-d">王立</a><b>前阿里资深工程师，国内最早一批实践和推广c的践行者，\'+\'建立了一套适用于c的敏捷开发过程，长期聚焦于领域分析、彩色X建模，擅长复杂业务的模型提炼与架构设计，\'+\'主张在聚合的实现在可以采用微单体时就尽量不要采用微服务，现任厦门云雾科技有限公司创始人/总经理。\',\'9-o\':\'<a f = "e-d">「c实践中的一些思考」</a><b>\'+\'事项跟踪管理是一个公司内部应用，解决各个部门主管对下属工作的安排与跟踪问题，项目采用c开发，\'+\'每个事项以及内部任务状态的流转“自治”，并根据状态与操作者角色提供操作入口，项目极其短小精悍，\'+\'深入浅出，可以简明扼要地把c实践中的采用的基本思想、套路、实践模式解释清楚，经验具有普遍性和\'+\'可复制性，非常适用于初步接触c的开发团队学习。\',\'9-j\':\'<g>\'+\'<7>项目背景</7>\'+\'<7>业务分析</7>\'+\'<7>架构设计</7>\'+\'<7>领域实现</7>\'+\'<7>状态管理</7>\'+\'<7>持久层与缓存</7>\'+\'<7>读写分离</7>\'+\'<7>性能优化</7>\'+\'<7>总结</7>\'+\'</g>\'},{\'9-n\':\'../i/h/1M.D\',\'9-l\':\'余丹妮\',\'9-m\':`有多年Q咨询界的经验，涉及零售，政府，媒体，金融，医疗等多个行业，曾担任年轻女学生科技创业项目的导师。目前为美国某电商提供咨询交付服务。`,\'9-k\':`<a f="e-d">余丹妮</a><b>有多年Q咨询界的经验，涉及零售，政府，媒体，金融，医疗等多个行业，曾担任年轻女学生科技创业项目的导师。目前为美国某电商提供咨询交付服务。`,\'9-o\':`<a f="e-d">「新业务背景下业务与系统的共同演进」</a><b>领域驱动设计强调以业务为核心，对业务领域进行抽象和建模。我们在做大多数领域建模活动时假设了一个前提条件，就是业务本身是清晰和确定的，并且有业务专家可以解答领域相关的疑问。<b>然而最近我们看到企业越来越多采用精益的方法来开展新业务，在有业务目标和初步业务概念的前提下进行各种试验来确定，演进和改善业务。在这种情况下使用传统方法进行领域建模会发现模型可能每天都在变。那是否领域驱动设计在这样的情况下不相关呢？<b>我们将分享一个项目案例。案例中的企业使用大量的试验和反馈环来更新和改善业务，我们将会探索软件系统和业务是如何共同演进，以及c的概念是如何在这个过程中支撑业务和系统的演进。`,\'9-j\':\'<g>\'+\'<7>统一语言</7>\'+\'<7>架构演进</7>\'+\'<7>G的封装</7>\'+\'<7>r 31的治理演进。</7>\'+\'</g>\'},{\'9-n\':\'../i/h/2V.D\',\'9-l\':\'黄邦伟\',\'9-m\':`Y《基于用例的面向方面的软件开发》与W《软件工程的本质》的作者。从1i年开始提供面向对象、领域划分、可变化设计、以及产品线工程的咨询。客户包括三星（韩国）、索尼（日本）、华为（中国）、等其他企业。`,\'9-k\':`<a f="e-d">黄邦伟</a><b>Y《基于用例的面向方面的软件开发》与W《软件工程的本质》的作者。<b>从1i年开始提供面向对象、领域划分、可变化设计、以及产品线工程的咨询。<b>客户包括三星（韩国）、索尼（日本）、华为（中国）、等其他企业。`,\'9-o\':`<a f="e-d">「基于G、1G 1l与12思维的端到端可变化设计」</a><b>软件开发其中最头疼的问题之一是如何应对需求的变化，减少系统的耦合。大部分软件设计方法都是从0到1，领域驱动设计也不例外。12思维就围绕着N+1，1P的设计方法，以便应对需求时间和空间的变化（34 V 2P O 2N）。另外，1G 1l思维把可变化性从设计前移到需求的划分，让你更早更有效的处理变化。本议题建立在Y《基于用例的面向方面的软件开发》的基础以及多年的经验提炼。`,\'9-j\':\'<g>\'+\'<7>12面向方面思维</7>\'+\'<7>领域划分可变化设计从需求开始</7>\'+\'<7>建立可扩展的需求架构</7>\'+\'<7>端到端可变化设计</7>\'+\'</g>\'},{\'9-n\':\'../i/h/2z.D\',\'9-l\':\'杨云\',\'9-m\':\'s首席咨询师\',\'9-k\':\'<a f="e-d">杨云</a><b><a f="e-d">s首席咨询师</a><b>20年软件开发经验，一直从事技术工作，s首席咨询师，\'+\'曾任支付宝架构师。 对函数式编程关注多年，在多个生产项目中实际使用J编程语言开发。 2R年建立的1B\'+\'函数式编程群可能是国内历史最长，人数最多的函数式编程讨论群。\',\'9-o\':\'<a f = "e-d">「c是一种纪律」</a><b>\'+\'c是一种模型驱动的软件设计方法，其难点不在于项目前期的大块的软件建模，而在于在软件持续更新的过程中保持模型\'+\'和代码的一致。现在主流的函数式编程语言，比如J和1B的类型系统具有很强的建模能力和表意能力，有助于以\'+\'较小的代价维持模型代码一致，甚至将更多的模型内容体现在代码中。\',\'9-j\':\'<g>\'+\'<7>了解如何在实际项目中因地制宜的采取一些力所能及的c技术。</7>\'+\'<7>对函数式编程和c的结合取得一定认识。</7>\'+\'</g>\'},{\'9-n\':\'../i/h/36.w\',\'9-l\':\'吴雪峰\',\'9-m\':\'s软件架构师\',\'9-k\':\'<a f="e-d">吴雪峰</a><b><a f="e-d">s软件架构师</a><b>主要负责敏捷软件开发与软件架构设计。他具有10+年软件架构设计经验，\'+\'从事于分布式系统、电子商务、医疗、电信行业的软件开发、架构设计及敏捷实践。擅长H/J技术，c、微服务架构、\'+\'2K分布式软件架构、v以及精益实践。\',\'9-o\':\'<a f = "e-d">「用函数式思想理解c」</a><b>\'+\'函数式编程和c都是最近热门的趋势，并且都不容易理解。通过一个小例子讨论用两个热门趋势的概念碰撞产生火花，\'+\'使得参会快速理解函数式和c思想的精髓。\',\'9-j\':\'<g>\'+\'<7>类型建模 T 数据库建模</7>\'+\'<7>函数和管道 T 工作流</7>\'+\'<7>业务领域语言 Z</7>\'+\'<7>重新理解聚合和边界上下文</7>\'+\'</g>\'},{\'9-n\':\'../i/h/1O.t\',\'9-l\':\'董乃文\',\'9-m\':\'微软(中国)有限公司<b>\'+\'首席技术顾问\',\'9-k\':\'<a f="e-d">董乃文</a><b>现任微软（中国）有限公司首席技术顾问，20多年的计算机软件行业工作经验，\'+\'积极推动云计算、大数据、人工智能等创新技术在制造业、零售业、新媒体、在线游戏等行业的技术推广与合作。作为标准化专家工作\'+\'组成员参加多个云计算、大数据、1k等国家技术标准的制定工作。曾负责多个1p、2H等软件产品的设计和研发工作，积极推动新开\'+\'发方法和自动化工具在大规模产品研发团队的运用，特别是领域工程、架构设计、软件产品线、集成产品开发、敏捷开发等模式的深入\'+\'实践，曾任北京软件行业协会软件过程改进协会秘书处副秘书长等积极推动创新开发方法和技术的社区共享。\',\'9-o\':\'<a f = "e-d">「领域驱动设计（c）与微服务：模式与实践」</a><b>\'+\'G-2J 32 (c) & 14: 37 O 3t<b>\'+\'基于微服务（14）的体系结构中，应用程序在可独立开发、测试、部署和版本控制的一系列服务上生成，开发者可以设\'+\'计出全天候高可用的云规模应用及服务，部署在本地数据中心和云端，便捷地缩放应用的规模，在持续运行中实现无缝衔接的敏捷开发\'+\'和全生命周期管理。使用面向领域驱动设计的模式，可以降低微服务中的业务复杂性，实现的更高级的微服务。\',\'9-j\':\'<g>\'+\'<7>微服务（14）体系结构</7>\'+\'<7>领域驱动设计与微服务的关键模式</7>\'+\'<7>应用c微服务打造端到端应用的参考案例与分享</7>\'+\'</g>\'}]',62,240,'|||||||li||speaker|span|br|DDD|text|bold|class|ul|speakers|resource|outline|information|name|introduction|img|topic||ol|Context|ThoughtWorks|jpg||DevOps|png|OO|Bounded|Golang|BA|Scrum||jpeg|CDI|FRP|Domain|Java|Action|Scala|OOP||FP||and|VS|IT|Spring|CTO|vs|UMLChina|in|2012|UML|2004|DSL||com|Aspect||Microservices||JavaEE||Brandolini|actor|MyBatis|redux|SpringMVC|EasyUI|Alberto|2017|2016|C3|2000|O2O|SOA|Case|cn|graphql|CNode|ERP|golang|python|DCI|Event|jianshu|www|http|Specification|Object|API|Python|Haskell|2008|Tips|Seam|GavinKing|Use|MVP|CEO|zhangye|60TECH|Energy|yudanni|2010|dongnaiwen|extension|Perficient|B2B|ENERGY|ORACLE|Storming|fuhaiyin|CI|why|100|ddd||matters|dinghui|today|UP|3W|700|liuxuebin|pv|CQRS|wangli|wangyang|RXJS|xiaoran|MicroSevice|RxJS|Modal|uiModal|Vs|rxjs|react|500|jinxinming|alberto|hurong|brandolini|JAVA|Coding|huangliang|microservice|based|TLA|GDCR|APAC|zhangyi|yangyun|paradiagm|Restful|b7e874f6d3e8|programming|functional|with|linweixiang|CRM|Procedure|driven|Reactive|Transaction|Role|space|Sourcing|time|from|2011|FizzBuzzWhizz|Implement|1381dc29fed9|huangbangwei|XP|TDD|ZTE|fangang|zhangxiaolong|Map|design|panjiayu|variability|10TECH|wuxuefeng|patterns|Answerer|Top|Time|All|Overflow|Stack|09|zhouyugang|Analysis|Design|DnA|IIBA|kangjiangmei|kubernetes|war|JPA|Rest|Devops|IONA|JBoss|zhangjianfeng|practices|ayered|AutoNL|NET|Idol|CPE|DBA|70TECH|zhouxuefeng|POC|BDD|REST|huangxiaohui|repository|2015|zhangqunhui|IBM|kouyu|Linux|2002|260|tengyun|tequila|lixin|var'.split('|'),0,{}))
